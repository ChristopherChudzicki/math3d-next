.container {
  background-color: var(--color-background);
  display: grid;
  grid-template-columns: 40px minmax(0, 1fr) 35px;
  grid-template-rows: auto auto;
  /*
  avoid border-doubling. See https://stackoverflow.com/q/12692089/2747370
    - outline is draw outside the element, not
    - margins on top, left, right "make room" for the outline
    - no margin on top means top bottom outline from previous item won't be
      see when items are next to each other in the list. (But will be seen
      elsewhere, e.g., when dragging!).

  Note: In some browsers, at some higher zoom levels, double borders show up sometimes.
  */
  outline: 1px solid var(--color-secondary-light);
  margin-top: 1px;
  margin-left: 1px;
  margin-right: 1px;
}
.container:focus-within {
  grid-template-columns: 40px 1fr min-content;
  width: fit-content;
  min-width: calc(100% - 2px);
}

.description {
  /** Make description lighter so that mathfields draw more visual focus */
  color: var(--color-text-light);
  max-width: 100%;
}

.grid-left-gutter {
  grid-column-start: 1;
  grid-column-end: 2;
  grid-row-start: 1;
  grid-row-end: 3;
}

.grid-center-top {
  grid-column-start: 2;
  grid-column-end: 3;
  grid-row-start: 1;
  grid-row-end: 2;
}
.grid-center-bottom {
  grid-column-start: 2;
  grid-column-end: 3;
  grid-row-start: 2;
  grid-row-end: 3;
}
.container.childItem .grid-center-bottom {
  min-height: 40px;
  padding-bottom: 0.5em;
}
.container.childItem .grid-right-gutter-bottom {
  padding-bottom: 0.5em;
}

.grid-right-gutter {
  grid-column-start: 3;
  grid-column-end: 4;
  grid-row-start: 1;
  grid-row-end: 3;
  padding-right: 0.25em;
}
.grid-right-gutter-top {
  grid-column-start: 3;
  grid-column-end: 4;
  grid-row-start: 1;
  grid-row-end: 2;
  padding-top: 0.25em;
  padding-right: 0.25em;
}
.grid-right-gutter-bottom {
  grid-column-start: 3;
  grid-column-end: 4;
  grid-row-start: 2;
  grid-row-end: 3;
  padding-right: 0.25em;
}

.left-gutter {
  display: flex;
  flex-direction: column;
}
.vertical-line {
  width: 1px;
  background-color: var(--color-secondary-light);
  flex: 1;
  align-self: center;
}

.item-active {
  background-color: var(--color-primary-light);
  transition-property: background-color;
  transition-duration: var(--transition-duration);
}

.hidden {
  visibility: hidden;
}
