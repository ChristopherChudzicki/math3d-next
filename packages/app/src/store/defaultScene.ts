import { MathItemType } from "@math3d/mathitem-configs";
import type { StrictScene as Scene } from "@math3d/api";

const defaultScene: Pick<Scene, "title" | "items" | "itemOrder" | "author"> & {
  key: null;
} = {
  key: null,
  title: "Untitled",
  author: null,
  items: [
    {
      id: "99",
      type: MathItemType.ExplicitSurface,
      properties: {
        expr: {
          rhs: "x^2-y^2",
          name: "_f",
          type: "function-assignment",
          params: ["x", "y"],
        },
        color: "rainbow",
        grid1: "8",
        grid2: "8",
        zBias: "0",
        domain: {
          type: "array",
          items: [
            {
              rhs: "\\left\\lbrack-2,2\\right\\rbrack",
              name: "_f",
              type: "function-assignment",
              params: ["y"],
            },
            {
              rhs: "\\left\\lbrack-2,2\\right\\rbrack",
              name: "_f",
              type: "function-assignment",
              params: ["x"],
            },
          ],
        },
        shaded: "true",
        zIndex: "0",
        opacity: "0.75",
        visible: true,
        calculatedVisibility: "",
        useCalculatedVisibility: false,
        samples1: "64",
        samples2: "64",
        colorExpr: {
          rhs: "mod(Z, 1)",
          name: "_f",
          type: "function-assignment",
          params: ["X", "Y", "Z", "x", "y"],
        },
        gridWidth: "2",
        description: "Explicit Surface",
        gridOpacity: "0.5",
      },
    },
    {
      id: "camera",
      type: MathItemType.Camera,
      properties: {
        target: "[0.00000,0.00000,0.00000]",
        position: "[2.45524,-5.44724,3.14807]",
        description: "Camera",
        useRelative: "false",
        isPanEnabled: "false",
        updateOnDrag: "true",
        isZoomEnabled: "true",
        isOrthographic: "false",
        isRotateEnabled: "true",
      },
    },
    {
      id: "axis-x",
      type: MathItemType.Axis,
      properties: {
        end: "true",
        max: "+5",
        min: "-5",
        axis: "x",
        size: "6",
        color: "#808080",
        label: "x",
        scale: "1",
        start: "false",
        width: "1",
        zBias: "0",
        zIndex: "0",
        opacity: "1",
        visible: true,
        calculatedVisibility: "",
        useCalculatedVisibility: false,
        divisions: "10",
        description: "Axis",
        labelVisible: "true",
        ticksVisible: "true",
      },
    },
    {
      id: "axis-y",
      type: MathItemType.Axis,
      properties: {
        end: "true",
        max: "+5",
        min: "-5",
        axis: "y",
        size: "6",
        color: "#808080",
        label: "y",
        scale: "1",
        start: "false",
        width: "1",
        zBias: "0",
        zIndex: "0",
        opacity: "1",
        visible: true,
        calculatedVisibility: "",
        useCalculatedVisibility: false,
        divisions: "10",
        description: "Axis",
        labelVisible: "true",
        ticksVisible: "true",
      },
    },
    {
      id: "axis-z",
      type: MathItemType.Axis,
      properties: {
        end: "true",
        max: "+5",
        min: "-5",
        axis: "z",
        size: "6",
        color: "#808080",
        label: "z",
        scale: "\\frac{1}{2}",
        start: "false",
        width: "1",
        zBias: "0",
        zIndex: "0",
        opacity: "1",
        visible: true,
        calculatedVisibility: "",
        useCalculatedVisibility: false,
        divisions: "10",
        description: "Axis",
        labelVisible: "true",
        ticksVisible: "true",
      },
    },
    {
      id: "grid-xy",
      type: MathItemType.Grid,
      properties: {
        axes: "xy",
        snap: "false",
        color: "#808080",
        width: "1/2",
        zBias: "0",
        zIndex: "0",
        opacity: "1",
        visible: true,
        calculatedVisibility: "",
        useCalculatedVisibility: false,
        divisions: "\\left[10,\\ 10\\right]",
        description: "Grid",
      },
    },
    {
      id: "grid-yz",
      type: MathItemType.Grid,
      properties: {
        axes: "yz",
        snap: "false",
        color: "#808080",
        width: "1/2",
        zBias: "0",
        zIndex: "0",
        opacity: "1",
        visible: false,
        calculatedVisibility: "",
        useCalculatedVisibility: false,
        divisions: "\\left[10,\\ 10\\right]",
        description: "Grid",
      },
    },
    {
      id: "grid-zx",
      type: MathItemType.Grid,
      properties: {
        axes: "zx",
        snap: "false",
        color: "#808080",
        width: "1/2",
        zBias: "0",
        zIndex: "0",
        opacity: "1",
        visible: false,
        calculatedVisibility: "",
        useCalculatedVisibility: false,
        divisions: "\\left[10,\\ 10\\right]",
        description: "Grid",
      },
    },
    {
      id: "cameraFolder",
      type: MathItemType.Folder,
      properties: { description: "Camera Controls", isCollapsed: "false" },
    },
    {
      id: "axes",
      type: MathItemType.Folder,
      properties: { description: "Axes and Grids", isCollapsed: "false" },
    },
    {
      id: "initialFolder",
      type: MathItemType.Folder,
      properties: { description: "A Folder", isCollapsed: "false" },
    },
  ],
  itemOrder: {
    axes: ["axis-x", "axis-y", "axis-z", "grid-xy", "grid-yz", "grid-zx"],
    main: ["initialFolder"],
    setup: ["cameraFolder", "axes"],
    cameraFolder: ["camera"],
    initialFolder: ["99"],
  },
};

export default defaultScene;
