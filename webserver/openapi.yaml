openapi: 3.0.3
info:
  title: Math3d API
  version: 0.0.1
  description: Math3d API
paths:
  /v0/auth/token/login/:
    post:
      operationId: auth_token_login_create
      description: Use this endpoint to obtain user authentication token.
      tags:
      - auth
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TokenCreateRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TokenCreateRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TokenCreateRequest'
      security:
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TokenCreate'
          description: ''
  /v0/auth/token/logout/:
    post:
      operationId: auth_token_logout_create
      description: Use this endpoint to logout user (remove user authentication token).
      tags:
      - auth
      security:
      - tokenAuth: []
      responses:
        '200':
          description: No response body
  /v0/auth/users/:
    get:
      operationId: auth_users_list
      description: A version of Djoser's UserViewSet with some actions removed.
      parameters:
      - in: query
        name: email
        schema:
          type: string
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      tags:
      - auth
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedUserList'
          description: ''
    post:
      operationId: auth_users_create
      description: A version of Djoser's UserViewSet with some actions removed.
      tags:
      - auth
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserCreatePasswordRetypeRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/UserCreatePasswordRetypeRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/UserCreatePasswordRetypeRequest'
        required: true
      security:
      - tokenAuth: []
      - {}
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: ''
  /v0/auth/users/{id}/:
    get:
      operationId: auth_users_retrieve
      description: A version of Djoser's UserViewSet with some actions removed.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this User.
        required: true
      tags:
      - auth
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: ''
    put:
      operationId: auth_users_update
      description: A version of Djoser's UserViewSet with some actions removed.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this User.
        required: true
      tags:
      - auth
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/UserRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/UserRequest'
        required: true
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: ''
    patch:
      operationId: auth_users_partial_update
      description: A version of Djoser's UserViewSet with some actions removed.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this User.
        required: true
      tags:
      - auth
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedUserRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedUserRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedUserRequest'
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: ''
    delete:
      operationId: auth_users_destroy
      description: A version of Djoser's UserViewSet with some actions removed.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this User.
        required: true
      tags:
      - auth
      security:
      - tokenAuth: []
      responses:
        '204':
          description: No response body
  /v0/auth/users/activation/:
    post:
      operationId: auth_users_activation_create
      description: A version of Djoser's UserViewSet with some actions removed.
      tags:
      - auth
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ActivationRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ActivationRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ActivationRequest'
        required: true
      security:
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Activation'
          description: ''
  /v0/auth/users/me/:
    get:
      operationId: auth_users_me_retrieve
      description: A version of Djoser's UserViewSet with some actions removed.
      tags:
      - auth
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: ''
    put:
      operationId: auth_users_me_update
      description: A version of Djoser's UserViewSet with some actions removed.
      tags:
      - auth
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/UserRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/UserRequest'
        required: true
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: ''
    patch:
      operationId: auth_users_me_partial_update
      description: A version of Djoser's UserViewSet with some actions removed.
      tags:
      - auth
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedUserRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedUserRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedUserRequest'
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: ''
    delete:
      operationId: auth_users_me_destroy
      description: A version of Djoser's UserViewSet with some actions removed.
      tags:
      - auth
      security:
      - tokenAuth: []
      responses:
        '204':
          description: No response body
  /v0/auth/users/resend_activation/:
    post:
      operationId: auth_users_resend_activation_create
      description: A version of Djoser's UserViewSet with some actions removed.
      tags:
      - auth
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SendEmailResetRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/SendEmailResetRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/SendEmailResetRequest'
        required: true
      security:
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SendEmailReset'
          description: ''
  /v0/auth/users/reset_password/:
    post:
      operationId: auth_users_reset_password_create
      description: A version of Djoser's UserViewSet with some actions removed.
      tags:
      - auth
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SendEmailResetRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/SendEmailResetRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/SendEmailResetRequest'
        required: true
      security:
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SendEmailReset'
          description: ''
  /v0/auth/users/reset_password_confirm/:
    post:
      operationId: auth_users_reset_password_confirm_create
      description: A version of Djoser's UserViewSet with some actions removed.
      tags:
      - auth
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PasswordResetConfirmRetypeRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PasswordResetConfirmRetypeRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PasswordResetConfirmRetypeRequest'
        required: true
      security:
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PasswordResetConfirmRetype'
          description: ''
  /v0/auth/users/set_password/:
    post:
      operationId: auth_users_set_password_create
      description: A version of Djoser's UserViewSet with some actions removed.
      tags:
      - auth
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SetPasswordRetypeRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/SetPasswordRetypeRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/SetPasswordRetypeRequest'
        required: true
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SetPasswordRetype'
          description: ''
  /v0/scenes/:
    get:
      operationId: scenes_list
      parameters:
      - in: query
        name: archived
        schema:
          type: boolean
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      - in: query
        name: title
        schema:
          type: string
      tags:
      - scenes
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedMiniSceneList'
          description: ''
    post:
      operationId: scenes_create
      tags:
      - scenes
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SceneCreateRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/SceneCreateRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/SceneCreateRequest'
        required: true
      security:
      - tokenAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SceneCreate'
          description: ''
  /v0/scenes/{key}/:
    get:
      operationId: scenes_retrieve
      parameters:
      - in: path
        name: key
        schema:
          type: string
        required: true
      tags:
      - scenes
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Scene'
          description: ''
    patch:
      operationId: scenes_partial_update
      parameters:
      - in: path
        name: key
        schema:
          type: string
        required: true
      tags:
      - scenes
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedSceneRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedSceneRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedSceneRequest'
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Scene'
          description: ''
    delete:
      operationId: scenes_destroy
      parameters:
      - in: path
        name: key
        schema:
          type: string
        required: true
      tags:
      - scenes
      security:
      - tokenAuth: []
      responses:
        '204':
          description: No response body
  /v0/scenes/me/:
    get:
      operationId: scenes_me_list
      parameters:
      - in: query
        name: archived
        schema:
          type: boolean
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      - in: query
        name: title
        schema:
          type: string
      tags:
      - scenes
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedMiniSceneList'
          description: ''
components:
  schemas:
    Activation:
      type: object
      properties:
        uid:
          type: string
        token:
          type: string
      required:
      - token
      - uid
    ActivationRequest:
      type: object
      properties:
        uid:
          type: string
          minLength: 1
        token:
          type: string
          minLength: 1
      required:
      - token
      - uid
    MiniScene:
      type: object
      properties:
        title:
          type: string
        key:
          type: string
          maxLength: 80
        author:
          type: integer
          nullable: true
        createdDate:
          type: string
          format: date-time
          readOnly: true
        modifiedDate:
          type: string
          format: date-time
          readOnly: true
        archived:
          type: boolean
      required:
      - createdDate
      - modifiedDate
    PaginatedMiniSceneList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=400&limit=100
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=200&limit=100
        results:
          type: array
          items:
            $ref: '#/components/schemas/MiniScene'
    PaginatedUserList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=400&limit=100
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=200&limit=100
        results:
          type: array
          items:
            $ref: '#/components/schemas/User'
    PasswordResetConfirmRetype:
      type: object
      properties:
        uid:
          type: string
        token:
          type: string
        new_password:
          type: string
        re_new_password:
          type: string
      required:
      - new_password
      - re_new_password
      - token
      - uid
    PasswordResetConfirmRetypeRequest:
      type: object
      properties:
        uid:
          type: string
          minLength: 1
        token:
          type: string
          minLength: 1
        new_password:
          type: string
          minLength: 1
        re_new_password:
          type: string
          minLength: 1
      required:
      - new_password
      - re_new_password
      - token
      - uid
    PatchedSceneRequest:
      type: object
      properties:
        items: {}
        itemOrder: {}
        title:
          type: string
        archived:
          type: boolean
    PatchedUserRequest:
      type: object
      properties:
        public_nickname:
          type: string
          minLength: 1
          maxLength: 64
    Scene:
      type: object
      properties:
        items: {}
        itemOrder: {}
        title:
          type: string
        key:
          type: string
          readOnly: true
        author:
          type: integer
          readOnly: true
        createdDate:
          type: string
          format: date-time
          readOnly: true
        modifiedDate:
          type: string
          format: date-time
          readOnly: true
        archived:
          type: boolean
      required:
      - author
      - createdDate
      - itemOrder
      - items
      - key
      - modifiedDate
    SceneCreate:
      type: object
      properties:
        items: {}
        itemOrder: {}
        title:
          type: string
        key:
          type: string
          readOnly: true
        createdDate:
          type: string
          format: date-time
          readOnly: true
        modifiedDate:
          type: string
          format: date-time
          readOnly: true
        archived:
          type: boolean
      required:
      - createdDate
      - itemOrder
      - items
      - key
      - modifiedDate
    SceneCreateRequest:
      type: object
      properties:
        items: {}
        itemOrder: {}
        title:
          type: string
        archived:
          type: boolean
      required:
      - itemOrder
      - items
    SendEmailReset:
      type: object
      properties:
        email:
          type: string
          format: email
      required:
      - email
    SendEmailResetRequest:
      type: object
      properties:
        email:
          type: string
          format: email
          minLength: 1
      required:
      - email
    SetPasswordRetype:
      type: object
      properties:
        new_password:
          type: string
        re_new_password:
          type: string
        current_password:
          type: string
      required:
      - current_password
      - new_password
      - re_new_password
    SetPasswordRetypeRequest:
      type: object
      properties:
        new_password:
          type: string
          minLength: 1
        re_new_password:
          type: string
          minLength: 1
        current_password:
          type: string
          minLength: 1
      required:
      - current_password
      - new_password
      - re_new_password
    TokenCreate:
      type: object
      properties:
        password:
          type: string
        email:
          type: string
    TokenCreateRequest:
      type: object
      properties:
        password:
          type: string
          minLength: 1
        email:
          type: string
          minLength: 1
    User:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        email:
          type: string
          format: email
          readOnly: true
          title: Email address
        public_nickname:
          type: string
          maxLength: 64
      required:
      - email
      - id
      - public_nickname
    UserCreatePasswordRetypeRequest:
      type: object
      properties:
        public_nickname:
          type: string
          minLength: 1
          maxLength: 64
        email:
          type: string
          format: email
          minLength: 1
          title: Email address
          maxLength: 254
        password:
          type: string
          writeOnly: true
          minLength: 1
        re_password:
          type: string
          minLength: 1
      required:
      - email
      - password
      - public_nickname
      - re_password
    UserRequest:
      type: object
      properties:
        public_nickname:
          type: string
          minLength: 1
          maxLength: 64
      required:
      - public_nickname
  securitySchemes:
    tokenAuth:
      type: apiKey
      in: header
      name: Authorization
      description: Token-based authentication with required prefix "Token"
