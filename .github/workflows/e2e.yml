name: End-to-end Tests

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

env:
  CI: True

jobs:
  e2e-tests:
    timeout-minutes: 60
    runs-on: ubuntu-latest
    environment: "ci"
    env:
      SKIP_YARN_COREPACK_CHECK: true
      APP_BASE_URL: ${{ vars.APP_BASE_URL }}
      VITE_API_BASE_URL: ${{ vars.VITE_API_BASE_URL }}
      VITE_LEGACY_APP_BASE_URL: ${{ vars.VITE_LEGACY_APP_BASE_URL }}
      VITE_ISSUE_URL: ${{ vars.VITE_ISSUE_URL }}
      TEST_API_URL: ${{ vars.TEST_API_URL }}
      TEST_APP_URL: ${{ vars.TEST_APP_URL }}
      TEST_EMAIL_PROVIDER: ${{ vars.TEST_EMAIL_PROVIDER }}
      TEST_USER_ADMIN_EMAIL: ${{ vars.TEST_USER_ADMIN_EMAIL }}
      TEST_USER_ADMIN_PASSWORD: ${{ vars.TEST_USER_ADMIN_PASSWORD }}
      TEST_USER_STATIC_EMAIL: ${{ vars.TEST_USER_STATIC_EMAIL }}
      TEST_USER_STATIC_PASSWORD: ${{ vars.TEST_USER_STATIC_PASSWORD }}
      # Database configuration
      DATABASE_URL: postgresql://postgres:postgres@localhost:5432/math3d # pragma: allowlist secret
      SECRET_KEY: "test-secret-key" # pragma: allowlist secret
      DEFAULT_FROM_EMAIL: "no-reply@math3d-local.org"
      SERVER_EMAIL: "maintainers@math3d-local.org"
      CORS_ALLOWED_ORIGINS: "http://localhost:3000"
      ENV: "ci"

    services:
      postgres:
        image: postgres:16.8
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres # pragma: allowlist secret
          POSTGRES_DB: math3d
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: "20.19.5"
          cache: "yarn"
      - uses: actions/setup-python@v5
        with:
          python-version: "3.12"
      - run: corepack enable

      # Install Python dependencies and set up webserver
      - name: Install uv
        run: pip install uv
      - name: Install Python dependencies
        working-directory: ./webserver
        run: uv sync --all-groups --frozen

      # Run database migrations and seed data
      - name: Run database migrations
        working-directory: ./webserver
        run: uv run ./manage.py migrate
      - name: Seed database
        working-directory: ./webserver
        run: uv run ./manage.py seed_test_data

      # Start webserver in background
      - name: Start webserver
        working-directory: ./webserver
        run: uv run ./manage.py runserver 0.0.0.0:8000 &

      # Frontend setup and build
      - name: Install dependencies
        run: yarn install --immutable
      - name: Build Frontend
        run: yarn build
      - name: Start Frontend
        run: yarn preview &

      # Install Playwright browsers while services are starting
      - name: Get Playwright version
        id: playwright-version
        run: echo "PLAYWRIGHT_VERSION=$(yarn workspace app-tests-e2e list --pattern @playwright/test --depth=0 --json | jq -r '.data.trees[0].children[0].version')" >> $GITHUB_OUTPUT

      - name: Cache Playwright browsers
        uses: actions/cache@v4
        id: playwright-cache
        with:
          path: ~/.cache/ms-playwright
          key: playwright-browsers-${{ steps.playwright-version.outputs.PLAYWRIGHT_VERSION }}-${{ runner.os }}
          restore-keys: |
            playwright-browsers-${{ steps.playwright-version.outputs.PLAYWRIGHT_VERSION }}-
            playwright-browsers-

      - name: Install Playwright Browsers
        if: steps.playwright-cache.outputs.cache-hit != 'true'
        run: yarn workspace app-tests-e2e playwright install --with-deps

      - name: Install Playwright system dependencies
        if: steps.playwright-cache.outputs.cache-hit == 'true'
        run: yarn workspace app-tests-e2e playwright install-deps

      # Wait for services to be ready
      - name: Wait for webserver
        run: |
          timeout 60s bash -c 'until curl -f http://localhost:8000/v0/; do sleep 2; done'
      - name: Wait for frontend
        run: |
          timeout 60s bash -c 'until curl -f http://localhost:3000; do sleep 2; done'

      # Run tests
      - name: Run Playwright tests
        run: yarn test-e2e
        env:
          CI: True
      - uses: actions/upload-artifact@v4
        if: always()
        with:
          name: playwright-report
          path: packages/app-tests-e2e/playwright-report/
          retention-days: 30
